{"version":3,"sources":["App.tsx","index.tsx"],"names":["getRandomName","value","Date","now","toString","slice","App","state","hasClock","clockName","today","timerId","timeUpdate","hideTheClock","event","preventDefault","setState","showTheClock","document","addEventListener","this","window","setInterval","console","info","toUTCString","_prevProps","prevState","debug","removeEventListener","clearInterval","className","Component","ReactDOM","render","getElementById"],"mappings":"6MAIA,SAASA,IACP,IAAMC,EAAQC,KAAKC,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBJ,GASX,IAAMK,EAAb,4MACEC,MAAQ,CACNC,UAAU,EACVC,UAAW,UACXC,MAAO,IAAIR,MAJf,EAOES,QAAU,EAPZ,EASEC,WAAa,EATf,EA8CEC,aAAe,SAACC,GACdA,EAAMC,iBACN,EAAKC,SAAS,CAAER,UAAU,KAhD9B,EAmDES,aAAe,WACb,EAAKD,SAAS,CAAER,UAAU,KApD9B,uDAWE,WAAqB,IAAD,OAClBU,SAASC,iBAAiB,cAAeC,KAAKP,cAC9CK,SAASC,iBAAiB,QAASC,KAAKH,cAExCG,KAAKR,WAAaS,OAAOC,aAAY,WACnC,IAAMZ,EAAQ,IAAIR,KAElB,EAAKc,SAAS,CAAEN,UAEZ,EAAKH,MAAMC,UACbe,QAAQC,KAAKd,EAAMe,cAAcpB,OAAO,IAAK,MAE9C,KAEHe,KAAKT,QAAUU,OAAOC,aAAY,WAChC,EAAKN,SAAS,CAAEP,UAAWT,QAC1B,QA3BP,gCA8BE,SAAmB0B,EAAgBC,GACjC,MAAgCP,KAAKb,MAA7BE,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,SAEfmB,EAAUlB,YAAcA,GAAaD,GACvCe,QAAQK,MAAR,uBAA8BD,EAAUlB,UAAxC,eAAwDW,KAAKb,MAAME,cAlCzE,kCAsCE,WACES,SAASW,oBAAoB,cAAeT,KAAKP,cACjDK,SAASW,oBAAoB,QAAST,KAAKH,cAE3CI,OAAOS,cAAcV,KAAKT,SAC1BU,OAAOS,cAAcV,KAAKR,cA3C9B,oBAuDE,WACE,MAAuCQ,KAAKb,MAApCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,MAE7B,OACE,sBAAKqB,UAAU,MAAf,UACE,6CAECvB,GACC,sBAAKuB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGtB,IAEH,6CACA,sBAAMsB,UAAU,cAAhB,SACGrB,EAAMe,cAAcpB,OAAO,IAAK,eArE/C,GAAyB2B,aCbzBC,IAASC,OACP,cAAC,EAAD,IACAhB,SAASiB,eAAe,W","file":"static/js/main.1ed09fdd.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { Component } from 'react';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n  today: Date,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  timeUpdate = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.hideTheClock);\n    document.addEventListener('click', this.showTheClock);\n\n    this.timeUpdate = window.setInterval(() => {\n      const today = new Date();\n\n      this.setState({ today });\n\n      if (this.state.hasClock) {\n        console.info(today.toUTCString().slice(-12, -4));\n      }\n    }, 1000);\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentDidUpdate(_prevProps: {}, prevState: State) {\n    const { clockName, hasClock } = this.state;\n\n    if (prevState.clockName !== clockName && hasClock) {\n      console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.hideTheClock);\n    document.removeEventListener('click', this.showTheClock);\n\n    window.clearInterval(this.timerId);\n    window.clearInterval(this.timeUpdate);\n  }\n\n  hideTheClock = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  showTheClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { hasClock, clockName, today } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <div className=\"Clock\">\n            <strong className=\"Clock__name\">\n              {clockName}\n            </strong>\n            <span> time is </span>\n            <span className=\"Clock__time\">\n              {today.toUTCString().slice(-12, -4)}\n            </span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}